name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_WORKSPACE_DIR: ${{ github.workspace }}

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Allow other OS tests to continue even if one fails
      matrix:
        os: [ubuntu-24.04, macos-14]
        rust: [1.89.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --workspace -- -D warnings

    - name: Build debug
      run: cargo build --workspace

    - name: Debug test environment
      run: |
        echo "Working directory: $(pwd)"
        echo "CARGO_WORKSPACE_DIR: ${CARGO_WORKSPACE_DIR}"
        echo "Rust version: $(rustc --version)"
        echo "Debug binary exists: $(ls -la target/debug/substrate* 2>/dev/null || echo 'NOT FOUND')"
        echo "Home directory: $HOME"
        echo "Temp directory: ${{ runner.temp }}"
        echo "Current shell: $SHELL"
        echo "OS: ${{ matrix.os }}"
      shell: bash

    - name: Run tests
      run: cargo test --workspace --verbose
      env:
        RUST_BACKTRACE: 1

    - name: Build release
      run: cargo build --release

    - name: Test binaries exist
      shell: bash
      run: |
        test -f target/release/substrate
        test -f target/release/substrate-shim
        echo "âœ… Both binaries built successfully"

