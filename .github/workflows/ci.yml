name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
        rust: [stable]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --workspace -- -D warnings

    - name: Run tests
      run: cargo test --workspace --verbose

    - name: Build release
      run: cargo build --release

    - name: Test binaries exist
      shell: bash
      run: |
        test -f target/release/substrate
        test -f target/release/substrate-shim
        echo "✅ Both binaries built successfully"

  publish-check:
    name: Publish Check
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Check publishing (dry run)
      run: |
        cargo publish -p substrate-common --dry-run --allow-dirty
        cargo publish -p substrate-shell --dry-run --allow-dirty  
        cargo publish -p substrate-shim --dry-run --allow-dirty
        echo "✅ All packages ready for publication"