name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: macos-14
            target: x86_64-apple-darwin
            suffix: ""
          - os: macos-14
            target: aarch64-apple-darwin
            suffix: ""
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            suffix: ".exe"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-2022" ]]; then
          7z a ../../../substrate-${{ github.ref_name }}-${{ matrix.target }}.zip substrate.exe substrate-shim.exe
        else
          tar -czf ../../../substrate-${{ github.ref_name }}-${{ matrix.target }}.tar.gz substrate substrate-shim
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: substrate-${{ github.ref_name }}-${{ matrix.target }}
        path: substrate-${{ github.ref_name }}-${{ matrix.target }}.*

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-24.04
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        echo "Publishing packages in dependency order..."
        cargo publish -p substrate-common
        sleep 30  # Wait for crates.io to process
        cargo publish -p substrate-shell
        sleep 30
        cargo publish -p substrate-shim  
        sleep 30
        cargo publish -p substrate
        echo "âœ… All packages published successfully"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-24.04
    needs: [build-release, publish-crates]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          artifacts/*/substrate-${{ github.ref_name }}-*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}