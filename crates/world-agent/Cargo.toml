[package]
name = "world-agent"
version = "0.1.1"
edition = "2021"
authors = ["Atomize"]
description = "Agent service running inside worlds/VMs providing execution API"
license = "MIT"

[[bin]]
name = "world-agent"
path = "src/main.rs"

[dependencies]
anyhow = { workspace = true }
serde = { version = "1", features = ["derive"] }
serde_json = { workspace = true }
tokio = { version = "1", features = ["full"] }
uuid = { workspace = true }
thiserror = "1"
axum = { version = "0.6", features = ["ws"] }
futures-util = "0.3"
hyper = "0.14"
hyperlocal = "0.8"
tokio-tungstenite = "0.21"
portable-pty = "0.8"
base64 = "0.22"
tower = "0.4"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
rand = "0.8"
once_cell = "1"
libc = "0.2"

# Local dependencies
substrate-common = { path = "../common" }
agent-api-core = { path = "../agent-api-core" }
agent-api-types = { path = "../agent-api-types" }
world-api = { path = "../world-api" }
substrate-broker = { path = "../broker" }

# Platform-specific world backends
[target.'cfg(target_os = "linux")'.dependencies]
world = { path = "../world" }

[dev-dependencies]
tempfile = "3"
